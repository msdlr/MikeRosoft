@model MikeRosoft.Models.OrderViewModels.CreateProductsForViewModel

@{
    ViewData["Title"] = "Create";
}




<h2>Create</h2>

<form asp-action="Create" method="post">

    <div class="form-horizontal">
        <h4>Purchase</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.UserName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.FirstSurname)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.FirstSurname)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.SecondSurname)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.SecondSurname)
            </dd>
        </dl>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="userId" type="hidden" class="form-control" />

        <div class="form-group">
            <label asp-for="address" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="address" class="form-control" height="20" />
                <span asp-validation-for="address" class="text-danger" />
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th width="50%">
                        Title
                    </th>
                    <th width="20%">
                        Price
                    </th>
                    <th>
                        Quantity
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ProductOrders.Count() == 0)
                {
                    <tr><td colspan="3">There are no movies available</td></tr>
                }
                else
                {
                    @for (int i = 0; i < Model.ProductOrders.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model.ProductOrders[i].products.title)
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.DisplayFor(modelItem => Model.ProductOrders[i].products.precio)

                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <input asp-for="ProductOrders[i].products.title" type="hidden" class="form-control" />
                                    <input asp-for="ProductOrders[i].products.precio" type="hidden" class="form-control" />
                                    <input asp-for="ProductOrders[i].products.description" type="hidden" class="form-control" />
                                    <input asp-for="ProductOrders[i].products.brand" type="hidden" class="form-control" />
                                    <input asp-for="ProductOrders[i].quantity" class="form-control" />
                                </div>

                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        @* this code needs the script defined in site.js *@
       


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


